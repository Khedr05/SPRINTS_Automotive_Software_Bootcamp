/*
 * timers_config.h
 *
 * Created: 05/06/2023 18:33:13
 *  Author: 20101
 */ 


#ifndef TIMERS_CONFIG_H_
#define TIMERS_CONFIG_H_

#define TIMER0_DELAY_ENABLE      1
#define TIMER0_DELAY_DISABLE	 0	
#define enable_delay_ms         TIMER0_DELAY_ENABLE


#define MCU_FREQ				8
#define TIMER_RESOLUTION		256
#define DELAY_IN_MS_RESCALER	8


typedef enum
{
	
	TIMER0_SYSTEM_STATE_OK = 0,
	TIMER0_SYSTEM_STATE_NOK,
	TIMER0_SYSTEM_STATE_NULL_POINTER,
	TIMER0_SYSTEM_STATE_MODE_OK,
	TIMER0_SYSTEM_STATE_MODE_NOK,
	TIMER0_SYSTEM_STATE_OC0_OK,
	TIMER0_SYSTEM_STATE_OC0_NOK,
	TIMER0_SYSTEM_STATE_INTERRUPT_OK,
	TIMER0_SYSTEM_STATE_INTERRUPT_NOK,
	TIMER0_SYSTEM_STATE_PRESCALER_OK,
	TIMER0_SYSTEM_STATE_PRESCALER_NOK,
	TIMER0_SYSTEM_STATE_SET_OVERFLOW_ISR_OK,
	TIMER0_SYSTEM_STATE_SET_OVERFLOW_ISR_NOK,
	TIMER0_SYSTEM_STATE_SET_CTC_ISR_OK,
	TIMER0_SYSTEM_STATE_SET_CTC_ISR_NOK,
	TIMER0_SYSTEM_STATE_SET_ISR_NOK
	
}enu_timer0_system_state;

typedef enum
{
	TIMER0_NORMAL_MODE = 0,
	TIMER0_CTC_MODE,
	TIMER0_PWM_PHASE_CORRECT_MODE,
	TIMER0_PWM_FAST_MODE
}enu_timer0_mode_t;

typedef enum
{
	TIMER0_OC0_DISCONNECTED = 0,
	TIMER0_OC0_TOGGLE_ON_COMPARE_MATCH,
	TIMER0_OC0_CLEAR_ON_COMPARE_MATCH,
	TIMER0_OC0_SET_ON_COMPARE_MATCH,
	TIMER0_OC0_CLEAR_ON_COMPARE_MATCH_SET_OC0_AT_TOP,
	TIMER0_OC0_SET_ON_COMPARE_MATCH_CLEAR_OC0_AT_TOP,
	TIMER0_CLEAR_OC0_UP_COUNTING_SET_OC0_DOWNCOUNTING,
	TIMER0_SET_OC0_UP_COUNTING_CLEAR_OC0_DOWNCOUNTING
}enu_timer0_oc0_output_mode_t;

typedef enum
{
	TIMER0_NO_SOURCE_CLOCK = 0,
	TIMER0_NO_PRESCALER,
	TIMER0_8_PRESCALER,
	TIMER0_64_PRESCALER,
	TIMER0_256_PRESCALER,
	TIMER0_1024_PRESCALER,
	TIMER0_EXTERNAL_CLOCK_FALLING_EDGE_PRESCALER,
	TIMER0_EXTERNAL_CLOCK_RISING_EDGE_PRESCALER,
}enu_timer0_prescaler_t;


typedef enum
{
	TIMER0_INTERRUPT_ENABLE = 0,
	TIMER0_INTERRUPT_DISABLE
	
}enu_timer0_trigger_mode_t;



typedef struct
{
	enu_timer0_mode_t				enu_timer0_mode;
	enu_timer0_prescaler_t			enu_timer0_prescaler;
	enu_timer0_oc0_output_mode_t	enu_timer0_oc0_output_mode;
	enu_timer0_trigger_mode_t		enu_timer0_trigger_mode;
	void(*ptr_func_overflow_callback)(void);
	void(*ptr_func_ctc_callback)(void);
}str_timer0_init_config_t;

#endif /* TIMERS_CONFIG_H_ */